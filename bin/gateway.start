#!/bin/bash
#
# Copyright (c) 2007-2014 Kaazing Corporation. All rights reserved.
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#
#####################################################################
#
PRG="$0"
#
GWTYPE="kgw"
OPTDIR="/opt/kaazing"
GWDIR="/kaazing-gateway"
CONFDIR="${GWDIR}/conf"
BINDIR="${GWDIR}/bin"
TOOLSDIR="${BINDIR}/tools"
KTOOLSDIR="${TOOLSDIR}/keytools"
SERVICESDIR="${CONFDIR}/services"
#
CONFFILE="${CONFDIR}/gateway-config.xml"
TSTOREFILE="truststore.db"
HEADERFILE="${SERVICESDIR}/kwic-header.conf"
FOOTERFILE="${SERVICESDIR}/kwic-footer.conf"
STARTSCRIPT="${BINDIR}/gateway.start"
#	
MYCLOUD="private"
MYPRIVIP=
MYPUBIP=
MYNAME=`hostname`
MYLOCALNAME='localgw'
MYALIAS="${MYNAME}-private-net"
MYFQDN="localhost"
MYPRIVDNS="localgw"
MYHOST=${MYPRIVDNS}
ALTDNS=${MYPRIVDNS}
#
#####################################################################
# Add services to configuration file based on user input
#####################################################################
config_services()
{
   cd ${SERVICESDIR}
   echo ""

   cat /dev/null > $CONFFILE

   cat $HEADERFILE >> $CONFFILE

   maxdefs=${#SERVICEDEF[@]} ; ((maxdefs--))

   for i in $(seq 0 ${maxdefs})
   do
      service=${SERVICENAME[$i]}
      definition=${SERVICEDEF[$i]}

      case $GWTYPE  in
         server) IFS=':' read hostip hostport <<< ${definition}
cat >> $CONFFILE <<EEOF
 <service>
    <name>$service proxy</name>
    <accept>ws://\${ambassador.server}:\${gateway.ssl.port}/${service}-proxy</accept>
    <connect>tcp://${hostip}:${hostport}</connect>

    <type>proxy</type>

    <accept-options>
      <tcp.bind>\${gateway.ssl.port}</tcp.bind>
    </accept-options>
 </service>
EEOF
                 ;;
         client)
cat >> $CONFFILE <<EEOF
 <service>
    <name>$service proxy</name>
    <accept>tcp://server:${definition}/</accept>
    <connect>ws://\${ambassador.server}:\${gateway.ssl.port}/${service}-proxy</connect>

    <type>proxy</type>

    <accept-options>
      <tcp.bind>${definition}</tcp.bind>
    </accept-options>

    <connect-options>
      <http.transport>tcp://${AMBSERVERIP}:\${gateway.ssl.port}</http.transport>
    </connect-options>
 </service>
EEOF
                 ;;
      esac
   done
   
   echo "" >> $CONFFILE

   cat $FOOTERFILE >> $CONFFILE
}

#####################################################################
# Fire up the Gateway
#####################################################################
start_gw()
{

   while [ -h "$PRG" ] ; do
     ls=`ls -ld "$PRG"`
     link=`expr "$ls" : '.*-> \(.*\)$'`
     if expr "$link" : '/.*' > /dev/null; then
       PRG="$link"
     else
       PRG=`dirname "$PRG"`/"$link"
     fi
   done

   PRGDIR=`dirname "$PRG"`

   # A temporary variable for the location of the gateway installation,
   # to allow determining the conf and lib subdirectories (assumed to 
   # be siblings to this script's 'bin' directory).
   GW_HOME=`cd "$PRGDIR/.." ; pwd`
   
   # You can define various Java system properties by setting the value
   # of the GATEWAY_OPTS environment variable before calling this script.
   # The script itself should not be changed. For example, the setting
   # below sets the Java maximum memory to 512MB.
   [ -z "$GATEWAY_OPTS" ] && GATEWAY_OPTS="-Xmx512m"
   
   # Add a directory for management support
   JAVA_LIBRARY_PATH="$GW_HOME/lib/sigar"

   exec java $GATEWAY_OPTS -Djava.library.path="$JAVA_LIBRARY_PATH" -XX:+HeapDumpOnOutOfMemoryError -cp "$GW_HOME/lib/*" org.kaazing.gateway.server.Main $*
}


#####################################################################
# Perform any cleanup tasks
#####################################################################
cleanup()
{
    exit 1
}

#####################################################################
# Main - Get the ball rolling
#####################################################################
# Trap signals and do cleanup
#
trap cleanup 1 2 3
#
# Process user specified options
sindex=0
GWOPTS="$@"

while [ $# -gt 0 ]
do
   case "$1" in
      ambassador-client) GWTYPE="client" ; AMBSERVERIP=$2 ; GWOPTS="" ; shift ;;
      ambassador-server) GWTYPE="server" ; GWOPTS="" ;;
               -service) SERVICENAME[$sindex]=$2 ; SERVICEDEF[$sindex]=$3 ; ((sindex++)) ; GWOPTS="" ; shift 2 ;;
                      *) ;;
   esac
   shift
done

case $GWTYPE in
   client|server) [ $sindex -le 0 ] && { echo "Missing ambassador-server-host or at least one -service definition." ; exit ; } 
                  config_services    # generate configuration file based on user input
                  ;;
               *) ;;
esac

start_gw $GWOPTS     # fire up the gateway

#####################################################################
# EOF
#####################################################################
