#!/bin/bash

set -e

fetcharch()
{
    if [ -x /usr/bin/arch -o -x /bin/arch ]; then
	ARCH=`arch`
	return
    fi

    if [ -x /usr/bin/uname -o -x /bin/uname ]; then
	ARCH=`uname -m`
	return
    fi

    if [ "$ARCH" == "" ]; then
	echo "$0 uses 'arch' or 'uname' which appear to be missing"
	exit 1
    fi
}

buildrootfs()
{
	case "${ARCH}" in
	x86_64)
		url=${1:-http://ftp.morpheus.net/pub/linux/crux/latest/iso/crux-3.4.iso}
		version=$(basename --suffix=.iso $url | sed 's/[^0-9.]*\([0-9.]*\).*/\1/')

		docker build -t cruxbuild build

		docker rm -f cruxbuild

		docker run \
			-i -t --privileged \
			--name cruxbuild \
			-e URL=${url} \
			-v $(pwd)/media:/mnt/media \
			cruxbuild

		docker cp cruxbuild:/build/rootfs.tar.xz .
		docker rm -f cruxbuild

		if $(git show-ref --verify --quiet refs/heads/${version}); then
			git branch -D ${version}
		fi

		git checkout -b ${version} origin/dist

		git add rootfs.tar.xz
		git commit -m "${version}"

		docker build -t crux:${version} .;;

	aarch64)
		$sh aarch64/crux-fetch.sh
		$(mv crux-arm-rootfs-3.4-aarch64.tar.xz aarch64/)

		docker build -t cruxbuild aarch64;;
	esac;
}

main() {
    fetcharch

    # TODO: Add more options (test, commit, push, etc)
    case "$1" in
	build)
	    buildrootfs "$@"
	    ;;
        *)
	    echo "Unrecognised argument $1"
	    ;;
    esac
}

main "$@"
